namespace Nancy.Extensions
{
    using System.Collections.Generic;
    using System.Linq;
    using Nancy.Routing;

    public static class NancyExtensions
    {
        public static IEnumerable<RouteDescription> GetRouteDescription(this NancyModule source, IRequest request)
        {
<<<<<<< /mnt/Vbox/FSTMerge/binary/fstmerge_tmp1390771227861/fstmerge_var1_4128878735509513685
            return source.GetRoutes(request.Method).Select(route => new RouteDescription { Action = route.Value, ModulePath = source.ModulePath, Path = route.Key });
=======
            const BindingFlags flags =
                BindingFlags.Instance | BindingFlags.Public | BindingFlags.IgnoreCase;

        	var verb = request.Verb;
			if (verb.ToUpperInvariant() == "HEAD")
			{
				verb = "GET";
			}
        	var property =
                typeof(NancyModule).GetProperty(verb, flags);

            if (property == null)
                return Enumerable.Empty<RouteDescription>();

            return
                from route in property.GetValue(source, null) as IDictionary<string, Func<object, Response>>
                select new RouteDescription
                {
                    Action = route.Value,
                    ModulePath = source.ModulePath,
                    Path = route.Key
                };
>>>>>>> /mnt/Vbox/FSTMerge/binary/fstmerge_tmp1390771227861/fstmerge_var2_8987287881049504788
        }
    }
}

