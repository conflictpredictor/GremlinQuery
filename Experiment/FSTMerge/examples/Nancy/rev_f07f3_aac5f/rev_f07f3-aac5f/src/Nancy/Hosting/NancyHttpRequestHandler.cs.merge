namespace Nancy.Hosting
{
    using System.Web;

    public class NancyHttpRequestHandler : IHttpHandler
    {
        public bool IsReusable
        {
            get { return false; }
        }

        public void ProcessRequest(HttpContext context)
        {
<<<<<<< /mnt/Vbox/FSTMerge/binary/fstmerge_tmp1390771227936/fstmerge_var1_4539121417715957726
            var wrappedContext = new HttpContextWrapper(context);
            var handler = new NancyHandler();
            handler.ProcessRequest(wrappedContext);
=======
            var url = context.Request.Url.AbsolutePath;
            if (url.Contains("favicon.ico"))
            {
                return;
            }

            var request = CreateNancyRequest(context);

            var assembly = 
                context.ApplicationInstance.GetType().BaseType.Assembly;

            var engine =
                new NancyEngine(new NancyModuleLocator(assembly), new RouteResolver());

            var response = engine.HandleRequest(request);

            SetNancyResponseToHttpResponse(context, response);
        }

        private static IRequest CreateNancyRequest(HttpContext context)
        {
        	return new Request(
                context.Request.HttpMethod,
                context.Request.Url.AbsolutePath);
        }

    	private static void SetNancyResponseToHttpResponse(HttpContext context, Response response)
        {
            context.Response.ContentType = response.ContentType;
            context.Response.StatusCode = (int)response.StatusCode;
            response.Contents.Invoke(context.Response.OutputStream);
>>>>>>> /mnt/Vbox/FSTMerge/binary/fstmerge_tmp1390771227936/fstmerge_var2_5505053838351054904
        }
    }
}

